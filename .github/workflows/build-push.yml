name: build container

on:
  push:
    paths:
      - src/**
      - .github/workflows/build-push.yml
      - test/**

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  dh_user: 'kshino'
  image: 'apex-clipper'
  tag_basename_arm64: 'm1'
  tag_basename_amd64: 'amd64'
  context: 'src'
  dockerfile_arm64: 'src/docker/Dockerfile-arm64'
  dockerfile_amd64: 'src/docker/Dockerfile-amd64'
  version: '3.32'

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: customize version
        run: |
          set -x
          sed -i -e 's#<version>#${{env.version}}-${{github.sha}}#' ./src/docker/Dockerfile-amd64
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push amd64 in develop branch
        if: github.ref != 'refs/heads/main'
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{env.dh_user}}/${{env.image}}:${{env.tag_basename_amd64}}-${{github.sha}}
          platforms: linux/amd64
          context: ${{env.context}}
          file: ${{env.dockerfile_amd64}}
      - name: Build and push amd64 in main branch
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{env.dh_user}}/${{env.image}}:${{env.tag_basename_amd64}},${{env.dh_user}}/${{env.image}}:${{env.tag_basename_amd64}}-${{github.sha}}
          platforms: linux/amd64
          context: ${{env.context}}
          file: ${{env.dockerfile_amd64}}

  build-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: customize version
        run: |
          set -x
          sed -i -e 's#<version>#${{env.version}}-${{github.sha}}#' ./src/docker/Dockerfile-arm64
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push arm64 in develop branch
        if: github.ref != 'refs/heads/main'
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{env.dh_user}}/${{env.image}}:${{env.tag_basename_arm64}}-${{github.sha}}
          platforms: linux/arm64
          context: ${{env.context}}
          file: ${{env.dockerfile_arm64}}
      - name: Build and push arm64 in main branch
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{env.dh_user}}/${{env.image}}:${{env.tag_basename_arm64}},${{env.dh_user}}/${{env.image}}:${{env.tag_basename_arm64}}-${{github.sha}}
          platforms: linux/arm64
          context: ${{env.context}}
          file: ${{env.dockerfile_arm64}}
  test-amd64:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    needs: build-amd64
    strategy:
      matrix:
        include:
          - mode: ocr
            target: clip
            audio: 1
            expected_result: 0
            debug: false
          - mode: ocr
            target: kill_failure
            audio: 1
            expected_result: 0
            debug: false
          - mode: ocr
            target: kill_success
            audio: 1
            expected_result: 17
            debug: false
          - mode: match_clip
            target: clip
            audio: 0
            expected_result: 1
            debug: false
          - mode: match_clip
            target: switch
            audio: 0
            expected_result: 2
            debug: false
          - mode: match_clip_foreach
            target: clip
            audio: 0
            expected_result: 1
            debug: false
          - mode: match_clip_foreach
            target: switch
            audio: 0
            expected_result: 2
            debug: false
          - mode: kill_clip
            target: kill_success
            audio: 0
            expected_result: 1
            debug: false
          - mode: kill_clip
            target: kill_failure
            audio: 0
            expected_result: 0
            debug: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: customize imagetag
        run: |
          set -x
          sed -i -e 's#<image-tag>#${{env.dh_user}}/${{env.image}}:${{env.tag_basename_amd64}}-${{github.sha}}#' ./test/apex_tracker.yml
          cat ./test/apex_tracker.yml
      - name: test
        run: |
          cd test
          export mode=${{matrix.mode}}
          export target=${{matrix.target}}
          export audio=${{matrix.audio}}
          export expected_result=${{matrix.expected_result}}
          export debug=${{matrix.debug}}
          ./test-action.sh
      - name: save artifact
        uses: actions/upload-artifact@v3
        with:
          name: result_mode-${{matrix.mode}}_target-${{matrix.target}}_audio-${{matrix.audio}}_result-${{matrix.expected_result}}_debug-${{matrix.debug}}
          path: |
            test/tmp/ocr/2023-08-01_10-00-00/cut_time_battle.csv
            test/tmp/out/*
            test/tmp/apex_kill_clip/*
          retention-days: 1
